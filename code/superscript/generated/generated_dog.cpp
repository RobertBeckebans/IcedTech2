// This file has been auto generated by the QuakeToC conversion tool
// 

#include "../../game/g_local.h "
#include "../superscript.h"
extern "C" {
	#include "generated_dog.h"

};

void dog_bite(gentity_t *self) {

 vec3_t	delta;
 float 	ldmg;

	if (!self->enemy)
		return;

	

	if (!CanDamage (self->enemy, self))
		return;

	delta = self->enemy->r.currentOrigin - self->r.currentOrigin;

	if (VectorLength(delta) > 100)
		return;
		
	ldmg = (random() + random() + random()) * 8;
	T_Damage (self->enemy, self, self, ldmg);
}
void Dog_JumpTouch(gentity_t *self, gentity_t *other, trace_t *trace) {

		float	ldmg;

	if (self->health <= 0)
		return;
		
	if (other->takedamage)
	{
		if ( VectorLength(self->velocity) > 300 )
		{
			ldmg = 10 + 10*random();
			T_Damage (other, self, self, ldmg);	
		}
	}

	if (!M_CheckBottom(self))
	{
		
		{	

	self->touch = nullptr;
	self->think = dog_leap1;
	self->nextthink = level.time + 0.1;





		}
		return;	
	}

	self->touch = nullptr;
	self->think = dog_run1;
	self->nextthink = level.time + 0.1;
}
void dog_stand1(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand1, stand1, &frame, dog_stand2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_stand,stand1,stand9);
}
void dog_stand2(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand2, stand2, &frame, dog_stand3};
	self->monsterinfo.currentmove = &move;
}
void dog_stand3(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand3, stand3, &frame, dog_stand4};
	self->monsterinfo.currentmove = &move;
}
void dog_stand4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand4, stand4, &frame, dog_stand5};
	self->monsterinfo.currentmove = &move;
}
void dog_stand5(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand5, stand5, &frame, dog_stand6};
	self->monsterinfo.currentmove = &move;
}
void dog_stand6(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand6, stand6, &frame, dog_stand7};
	self->monsterinfo.currentmove = &move;
}
void dog_stand7(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand7, stand7, &frame, dog_stand8};
	self->monsterinfo.currentmove = &move;
}
void dog_stand8(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand8, stand8, &frame, dog_stand9};
	self->monsterinfo.currentmove = &move;
}
void dog_stand9(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { stand9, stand9, &frame, dog_stand1};
	self->monsterinfo.currentmove = &move;
}
void dog_walk1(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk1, walk1, &frame, dog_walk2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_walk,walk1,walk8);

if (random() < 0.2)
	sound (self, CHAN_VOICE, "dog/idle.wav", 1, ATTN_IDLE);
}
void dog_walk2(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk2, walk2, &frame, dog_walk3};
	self->monsterinfo.currentmove = &move;
}
void dog_walk3(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk3, walk3, &frame, dog_walk4};
	self->monsterinfo.currentmove = &move;
}
void dog_walk4(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk4, walk4, &frame, dog_walk5};
	self->monsterinfo.currentmove = &move;
}
void dog_walk5(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk5, walk5, &frame, dog_walk6};
	self->monsterinfo.currentmove = &move;
}
void dog_walk6(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk6, walk6, &frame, dog_walk7};
	self->monsterinfo.currentmove = &move;
}
void dog_walk7(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk7, walk7, &frame, dog_walk8};
	self->monsterinfo.currentmove = &move;
}
void dog_walk8(gentity_t *self) {
	static mframe_t frame = { ai_walk,8, NULL };
	static mmove_t move = { walk8, walk8, &frame, dog_walk1};
	self->monsterinfo.currentmove = &move;
}
void dog_run1(gentity_t *self) {
	static mframe_t frame = { ai_run,16, NULL };
	static mmove_t move = { run1, run1, &frame, dog_run2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_run,run1,run12);

if (random() < 0.2)
	sound (self, CHAN_VOICE, "dog/idle.wav", 1, ATTN_IDLE);
}
void dog_run2(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run2, run2, &frame, dog_run3};
	self->monsterinfo.currentmove = &move;
}
void dog_run3(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run3, run3, &frame, dog_run4};
	self->monsterinfo.currentmove = &move;
}
void dog_run4(gentity_t *self) {
	static mframe_t frame = { ai_run,20, NULL };
	static mmove_t move = { run4, run4, &frame, dog_run5};
	self->monsterinfo.currentmove = &move;
}
void dog_run5(gentity_t *self) {
	static mframe_t frame = { ai_run,64, NULL };
	static mmove_t move = { run5, run5, &frame, dog_run6};
	self->monsterinfo.currentmove = &move;
}
void dog_run6(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run6, run6, &frame, dog_run7};
	self->monsterinfo.currentmove = &move;
}
void dog_run7(gentity_t *self) {
	static mframe_t frame = { ai_run,16, NULL };
	static mmove_t move = { run7, run7, &frame, dog_run8};
	self->monsterinfo.currentmove = &move;
}
void dog_run8(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run8, run8, &frame, dog_run9};
	self->monsterinfo.currentmove = &move;
}
void dog_run9(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run9, run9, &frame, dog_run10};
	self->monsterinfo.currentmove = &move;
}
void dog_run10(gentity_t *self) {
	static mframe_t frame = { ai_run,20, NULL };
	static mmove_t move = { run10, run10, &frame, dog_run11};
	self->monsterinfo.currentmove = &move;
}
void dog_run11(gentity_t *self) {
	static mframe_t frame = { ai_run,64, NULL };
	static mmove_t move = { run11, run11, &frame, dog_run12};
	self->monsterinfo.currentmove = &move;
}
void dog_run12(gentity_t *self) {
	static mframe_t frame = { ai_run,32, NULL };
	static mmove_t move = { run12, run12, &frame, dog_run1};
	self->monsterinfo.currentmove = &move;
}
void dog_atta1(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack1, attack1, &frame, dog_atta2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_attack,attack1,attack8);
}
void dog_atta2(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack2, attack2, &frame, dog_atta3};
	self->monsterinfo.currentmove = &move;
}
void dog_atta3(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack3, attack3, &frame, dog_atta4};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_atta4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { attack4, attack4, &frame, dog_atta5};
	self->monsterinfo.currentmove = &move;

sound (self, CHAN_VOICE, "dog/dattack1.wav", 1, ATTN_NORM);
dog_bite(self);}
void dog_atta5(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack5, attack5, &frame, dog_atta6};
	self->monsterinfo.currentmove = &move;
}
void dog_atta6(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack6, attack6, &frame, dog_atta7};
	self->monsterinfo.currentmove = &move;
}
void dog_atta7(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack7, attack7, &frame, dog_atta8};
	self->monsterinfo.currentmove = &move;
}
void dog_atta8(gentity_t *self) {
	static mframe_t frame = { ai_charge,10, NULL };
	static mmove_t move = { attack8, attack8, &frame, dog_run1};
	self->monsterinfo.currentmove = &move;
}
void dog_leap1(gentity_t *self) {
	static mframe_t frame = { ai_face,0, NULL };
	static mmove_t move = { leap1, leap1, &frame, dog_leap2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_leap,leap1,leap9);
}
void dog_leap2(gentity_t *self) {
	static mframe_t frame = { ai_face,0, NULL };
	static mmove_t move = { leap2, leap2, &frame, dog_leap3};
	self->monsterinfo.currentmove = &move;

	
	
	self->touch = Dog_JumpTouch;
	makevectors (self->r.currentAngles);
	self->r.currentOrigin[2] = self->r.currentOrigin[2] + 1;
	self->velocity = v_forward * 300 + idVec3_t(0, 0, 200);
	
	
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap3(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap3, leap3, &frame, dog_leap4};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap4, leap4, &frame, dog_leap5};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap5(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap5, leap5, &frame, dog_leap6};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap6(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap6, leap6, &frame, dog_leap7};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap7(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap7, leap7, &frame, dog_leap8};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap8(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap8, leap8, &frame, dog_leap9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_leap9(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { leap9, leap9, &frame, dog_leap9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain1(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain1, pain1, &frame, dog_pain2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_pain,pain1,pain6);
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain2(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain2, pain2, &frame, dog_pain3};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain3(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain3, pain3, &frame, dog_pain4};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain4, pain4, &frame, dog_pain5};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain5(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain5, pain5, &frame, dog_pain6};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_pain6(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { pain6, pain6, &frame, dog_run1};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb1(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb1, painb1, &frame, dog_painb2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_painb,painb1,painb16);
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb2(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb2, painb2, &frame, dog_painb3};
	self->monsterinfo.currentmove = &move;
}
void dog_painb3(gentity_t *self) {
	static mframe_t frame = { ai_pain,4, NULL };
	static mmove_t move = { painb3, painb3, &frame, dog_painb4};
	self->monsterinfo.currentmove = &move;
}
void dog_painb4(gentity_t *self) {
	static mframe_t frame = { ai_pain,12, NULL };
	static mmove_t move = { painb4, painb4, &frame, dog_painb5};
	self->monsterinfo.currentmove = &move;
}
void dog_painb5(gentity_t *self) {
	static mframe_t frame = { ai_pain,12, NULL };
	static mmove_t move = { painb5, painb5, &frame, dog_painb6};
	self->monsterinfo.currentmove = &move;
}
void dog_painb6(gentity_t *self) {
	static mframe_t frame = { ai_pain,2, NULL };
	static mmove_t move = { painb6, painb6, &frame, dog_painb7};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb7(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb7, painb7, &frame, dog_painb8};
	self->monsterinfo.currentmove = &move;
}
void dog_painb8(gentity_t *self) {
	static mframe_t frame = { ai_pain,4, NULL };
	static mmove_t move = { painb8, painb8, &frame, dog_painb9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb9(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb9, painb9, &frame, dog_painb10};
	self->monsterinfo.currentmove = &move;
}
void dog_painb10(gentity_t *self) {
	static mframe_t frame = { ai_pain,10, NULL };
	static mmove_t move = { painb10, painb10, &frame, dog_painb11};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb11(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb11, painb11, &frame, dog_painb12};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb12(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb12, painb12, &frame, dog_painb13};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb13(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb13, painb13, &frame, dog_painb14};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb14(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb14, painb14, &frame, dog_painb15};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb15(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb15, painb15, &frame, dog_painb16};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_painb16(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { painb16, painb16, &frame, dog_run1};
	self->monsterinfo.currentmove = &move;
}
void dog_pain(gentity_t *self) {

	sound (self, CHAN_VOICE, "dog/dpain1.wav", 1, ATTN_NORM);

	if (random() > 0.5)
		dog_pain1(self);
	else
		dog_painb1(self);
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die1(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death1, death1, &frame, dog_die2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_death,death1,death9);
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die2(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death2, death2, &frame, dog_die3};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die3(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death3, death3, &frame, dog_die4};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death4, death4, &frame, dog_die5};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die5(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death5, death5, &frame, dog_die6};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die6(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death6, death6, &frame, dog_die7};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die7(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death7, death7, &frame, dog_die8};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die8(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death8, death8, &frame, dog_die9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_die9(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { death9, death9, &frame, dog_die9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb1(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb1, deathb1, &frame, dog_dieb2};
	self->monsterinfo.currentmove = &move;
// Anim Start function
G_SendAnimUpdate(self, anim_event_deathb,deathb1,deathb9);
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb2(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb2, deathb2, &frame, dog_dieb3};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb3(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb3, deathb3, &frame, dog_dieb4};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb4(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb4, deathb4, &frame, dog_dieb5};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb5(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb5, deathb5, &frame, dog_dieb6};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb6(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb6, deathb6, &frame, dog_dieb7};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb7(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb7, deathb7, &frame, dog_dieb8};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb8(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb8, deathb8, &frame, dog_dieb9};
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void dog_dieb9(gentity_t *self) {
	static mframe_t frame = { ai_stand,0, NULL };
	static mmove_t move = { deathb9, deathb9, &frame, dog_dieb9};
	self->monsterinfo.currentmove = &move;
}
void dog_die(gentity_t *self) {


	if (self->health < -35)
	{
		sound (self, CHAN_VOICE, "player/udeath.wav", 1, ATTN_NORM);
		SpawnGib(self);
		self->isGibbed = qtrue;
		return;
	}


	sound (self, CHAN_VOICE, "dog/ddeath.wav", 1, ATTN_NORM);
		self->r.contents = 0;
	trap_LinkEntity(self);


	if (random() > 0.5)
		dog_die1(self);
	else
		dog_dieb1(self);
}
float CheckDogMelee(gentity_t *self) {

	if (enemy_range == RANGE_MELEE)
	{	
		self->attack_state = AS_MELEE;
		return TRUE;
	}
	return FALSE;
}
float CheckDogJump(gentity_t *self) {

		vec3_t	dist;
		float	d;

	if (self->r.currentOrigin[2] + self->r.mins[2] > self->enemy->r.currentOrigin[2] + self->enemy->r.mins[2]
	) 
		return FALSE;
		
	if (self->r.currentOrigin[2] + self->r.maxs[2] < self->enemy->r.currentOrigin[2] + self->enemy->r.mins[2]
	) 
		return FALSE;
		
	dist = self->enemy->r.currentOrigin - self->r.currentOrigin;
	dist.z = 0;
	
	d = VectorLength(dist);
	
	if (d < 80)
		return FALSE;
		
	if (d > 150)
		return FALSE;
		
	return TRUE;
}
float DogCheckAttack(gentity_t *self) {

		vec3_t	vec;
	

	if (CheckDogMelee(self))
	{
		self->attack_state = AS_MELEE;
		return TRUE;
	}
	
	if (CheckDogJump(self))
	{
		self->attack_state = AS_MISSILE;
		return TRUE;
	}
	
	return FALSE;
}
void monster_dog(gentity_t *self) {

	precache_model ("progs/h_dog.mdl");
	precache_model ("models/monsters/dog.md3");

	precache_sound ("dog/dattack1.wav");
	precache_sound ("dog/ddeath.wav");
	precache_sound ("dog/dpain1.wav");
	precache_sound ("dog/dsight.wav");
	precache_sound ("dog/idle.wav");

		self->r.contents = CONTENTS_SOLID;
	trap_LinkEntity(self);

	self->movetype = MOVETYPE_STEP;

	setmodel (self, "models/monsters/dog.md3");

	setsize (self, idVec3_t(-32, -32, -24), idVec3_t(32, 32, 40));
	self->health = 25;

	self->monsterinfo.checkattack = DogCheckAttack;
	self->monsterinfo.stand = dog_stand1;
	self->monsterinfo.walk = dog_walk1;
	self->monsterinfo.run = dog_run1;
	self->monsterinfo.pain = dog_pain;
	self->monsterinfo.die = dog_die;
	self->monsterinfo.melee = dog_atta1;
	self->monsterinfo.attack = dog_leap1;

	walkmonster_start(self);
}
