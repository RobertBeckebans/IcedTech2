// This file has been auto generated by the QuakeToC conversion tool
//

#include "../../game/g_local.h "
#include "../superscript.h"
extern "C"
{
#include "generated_demon.h"
};

void demon1_stand1( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand1, stand1, &frame, demon1_stand2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_stand, stand1, stand13 );
}
void demon1_stand2( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand2, stand2, &frame, demon1_stand3 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand3( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand3, stand3, &frame, demon1_stand4 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand4( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand4, stand4, &frame, demon1_stand5 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand5( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand5, stand5, &frame, demon1_stand6 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand6( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand6, stand6, &frame, demon1_stand7 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand7( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand7, stand7, &frame, demon1_stand8 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand8( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand8, stand8, &frame, demon1_stand9 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand9( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand9, stand9, &frame, demon1_stand10 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand10( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand10, stand10, &frame, demon1_stand11 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand11( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand11, stand11, &frame, demon1_stand12 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand12( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand12, stand12, &frame, demon1_stand13 };
	self->monsterinfo.currentmove = &move;
}
void demon1_stand13( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { stand13, stand13, &frame, demon1_stand1 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk1( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 8, NULL };
	static mmove_t  move          = { walk1, walk1, &frame, demon1_walk2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_walk, walk1, walk8 );

	if( random() < 0.2 )
		sound( self, CHAN_VOICE, "demon/idle1.wav", 1, ATTN_IDLE );
}
void demon1_walk2( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 6, NULL };
	static mmove_t  move          = { walk2, walk2, &frame, demon1_walk3 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk3( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 6, NULL };
	static mmove_t  move          = { walk3, walk3, &frame, demon1_walk4 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk4( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 7, NULL };
	static mmove_t  move          = { walk4, walk4, &frame, demon1_walk5 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk5( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 4, NULL };
	static mmove_t  move          = { walk5, walk5, &frame, demon1_walk6 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk6( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 6, NULL };
	static mmove_t  move          = { walk6, walk6, &frame, demon1_walk7 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk7( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 10, NULL };
	static mmove_t  move          = { walk7, walk7, &frame, demon1_walk8 };
	self->monsterinfo.currentmove = &move;
}
void demon1_walk8( gentity_t* self )
{
	static mframe_t frame         = { ai_walk, 10, NULL };
	static mmove_t  move          = { walk8, walk8, &frame, demon1_walk1 };
	self->monsterinfo.currentmove = &move;
}
void demon1_run1( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 20, NULL };
	static mmove_t  move          = { run1, run1, &frame, demon1_run2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_run, run1, run6 );

	if( random() < 0.2 )
		sound( self, CHAN_VOICE, "demon/idle1.wav", 1, ATTN_IDLE );
}
void demon1_run2( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 15, NULL };
	static mmove_t  move          = { run2, run2, &frame, demon1_run3 };
	self->monsterinfo.currentmove = &move;
}
void demon1_run3( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 36, NULL };
	static mmove_t  move          = { run3, run3, &frame, demon1_run4 };
	self->monsterinfo.currentmove = &move;
}
void demon1_run4( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 20, NULL };
	static mmove_t  move          = { run4, run4, &frame, demon1_run5 };
	self->monsterinfo.currentmove = &move;
}
void demon1_run5( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 15, NULL };
	static mmove_t  move          = { run5, run5, &frame, demon1_run6 };
	self->monsterinfo.currentmove = &move;
}
void demon1_run6( gentity_t* self )
{
	static mframe_t frame         = { ai_run, 36, NULL };
	static mmove_t  move          = { run6, run6, &frame, demon1_run1 };
	self->monsterinfo.currentmove = &move;
}
void demon1_jump1( gentity_t* self )
{
	static mframe_t frame         = { ai_face, 0, NULL };
	static mmove_t  move          = { leap1, leap1, &frame, demon1_jump2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_leap, leap1, leap10 );
}
void demon1_jump2( gentity_t* self )
{
	static mframe_t frame         = { ai_face, 0, NULL };
	static mmove_t  move          = { leap2, leap2, &frame, demon1_jump3 };
	self->monsterinfo.currentmove = &move;
}
void demon1_jump3( gentity_t* self )
{
	static mframe_t frame         = { ai_face, 0, NULL };
	static mmove_t  move          = { leap3, leap3, &frame, demon1_jump4 };
	self->monsterinfo.currentmove = &move;
}
void demon1_jump4( gentity_t* self )
{
	static mframe_t frame         = { ai_face, 0, NULL };
	static mmove_t  move          = { leap4, leap4, &frame, demon1_jump5 };
	self->monsterinfo.currentmove = &move;

	self->touch = Demon_JumpTouch;
	makevectors( self->r.currentAngles );
	self->r.currentOrigin[ 2 ] = self->r.currentOrigin[ 2 ] + 1;
	self->velocity             = v_forward * 600 + idVec3_t( 0, 0, 250 );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump5( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap5, leap5, &frame, demon1_jump6 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump6( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap6, leap6, &frame, demon1_jump7 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump7( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap7, leap7, &frame, demon1_jump8 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump8( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap8, leap8, &frame, demon1_jump9 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump9( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap9, leap9, &frame, demon1_jump10 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump10( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap10, leap10, &frame, demon1_jump1 };
	self->monsterinfo.currentmove = &move;

	self->nextthink = level.time + 3;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump11( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap11, leap11, &frame, demon1_jump12 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_leap, leap11, leap12 );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_jump12( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { leap12, leap12, &frame, demon1_run1 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta1( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 4, NULL };
	static mmove_t  move          = { attacka1, attacka1, &frame, demon1_atta2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_attacka, attacka1, attacka8 );
}
void demon1_atta2( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 0, NULL };
	static mmove_t  move          = { attacka2, attacka2, &frame, demon1_atta3 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta3( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 0, NULL };
	static mmove_t  move          = { attacka3, attacka3, &frame, demon1_atta4 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta4( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 1, NULL };
	static mmove_t  move          = { attacka4, attacka4, &frame, demon1_atta5 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta5( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 2, NULL };
	static mmove_t  move          = { attacka5, attacka5, &frame, demon1_atta6 };
	self->monsterinfo.currentmove = &move;
	Demon_Melee( self );
}
void demon1_atta6( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 1, NULL };
	static mmove_t  move          = { attacka6, attacka6, &frame, demon1_atta7 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta7( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 6, NULL };
	static mmove_t  move          = { attacka7, attacka7, &frame, demon1_atta8 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta8( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 8, NULL };
	static mmove_t  move          = { attacka8, attacka8, &frame, demon1_atta9 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta9( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 4, NULL };
	static mmove_t  move          = { attacka9, attacka9, &frame, demon1_atta10 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_attacka, attacka9, attacka15 );
}
void demon1_atta10( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 2, NULL };
	static mmove_t  move          = { attacka10, attacka10, &frame, demon1_atta11 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_atta11( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { attacka11, attacka11, &frame, demon1_atta12 };
	self->monsterinfo.currentmove = &move;
	Demon_Melee( self );
}
void demon1_atta12( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 5, NULL };
	static mmove_t  move          = { attacka12, attacka12, &frame, demon1_atta13 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta13( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 8, NULL };
	static mmove_t  move          = { attacka13, attacka13, &frame, demon1_atta14 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta14( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 4, NULL };
	static mmove_t  move          = { attacka14, attacka14, &frame, demon1_atta15 };
	self->monsterinfo.currentmove = &move;
}
void demon1_atta15( gentity_t* self )
{
	static mframe_t frame         = { ai_charge, 4, NULL };
	static mmove_t  move          = { attacka15, attacka15, &frame, demon1_run1 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain1( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain1, pain1, &frame, demon1_pain2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_pain, pain1, pain6 );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain2( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain2, pain2, &frame, demon1_pain3 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain3( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain3, pain3, &frame, demon1_pain4 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain4( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain4, pain4, &frame, demon1_pain5 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain5( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain5, pain5, &frame, demon1_pain6 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_pain6( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { pain6, pain6, &frame, demon1_run1 };
	self->monsterinfo.currentmove = &move;
}
void demon1_pain( gentity_t* self )
{
	if( self->touch == Demon_JumpTouch )
		return;

	if( self->pain_finished > level.time )
		return;

	self->pain_finished = level.time + 1;
	sound( self, CHAN_VOICE, "demon/dpain1.wav", 1, ATTN_NORM );

	if( random() * 200 > g_damage )
		return;

	demon1_pain1( self );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die1( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death1, death1, &frame, demon1_die2 };
	self->monsterinfo.currentmove = &move;
	// Anim Start function
	G_SendAnimUpdate( self, anim_event_death, death1, death9 );

	sound( self, CHAN_VOICE, "demon/ddeath.wav", 1, ATTN_NORM );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die2( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death2, death2, &frame, demon1_die3 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die3( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death3, death3, &frame, demon1_die4 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die4( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death4, death4, &frame, demon1_die5 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die5( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death5, death5, &frame, demon1_die6 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die6( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death6, death6, &frame, demon1_die7 };
	self->monsterinfo.currentmove = &move;
	self->r.contents              = 0;
	trap_LinkEntity( self );
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die7( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death7, death7, &frame, demon1_die8 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die8( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death8, death8, &frame, demon1_die9 };
	self->monsterinfo.currentmove = &move;
}
// WARNING: No AI state change specified, defaulting to ai_stand
void demon1_die9( gentity_t* self )
{
	static mframe_t frame         = { ai_stand, 0, NULL };
	static mmove_t  move          = { death9, death9, &frame, demon1_die9 };
	self->monsterinfo.currentmove = &move;
}
void demon_die( gentity_t* self )
{
	if( self->health < -80 )
	{
		sound( self, CHAN_VOICE, "player/udeath.wav", 1, ATTN_NORM );
		SpawnGib( self );
		return;
	}

	demon1_die1( self );
}
void Demon_MeleeAttack( gentity_t* self )
{
	demon1_atta1( self );
}
void monster_demon1( gentity_t* self )
{
	precache_model( "models/monsters/demon.md3" );
	precache_model( "progs/h_demon.mdl" );

	precache_sound( "demon/ddeath.wav" );
	precache_sound( "demon/dhit2.wav" );
	precache_sound( "demon/djump.wav" );
	precache_sound( "demon/dpain1.wav" );
	precache_sound( "demon/idle1.wav" );
	precache_sound( "demon/sight2.wav" );

	self->r.contents = CONTENTS_SOLID;
	trap_LinkEntity( self );

	self->movetype = MOVETYPE_STEP;

	setmodel( self, "models/monsters/demon.md3" );

	setsize( self, VEC_HULL2_MIN, VEC_HULL2_MAX );
	self->health = 300;

	self->monsterinfo.stand  = demon1_stand1;
	self->monsterinfo.walk   = demon1_walk1;
	self->monsterinfo.run    = demon1_run1;
	self->monsterinfo.die    = demon_die;
	self->monsterinfo.melee  = Demon_MeleeAttack;
	self->monsterinfo.attack = demon1_jump1;
	self->monsterinfo.pain   = demon1_pain;

	walkmonster_start( self );
}
float CheckDemonMelee( gentity_t* self )
{
	if( enemy_range == RANGE_MELEE )
	{
		self->attack_state = AS_MELEE;
		return TRUE;
	}
	return FALSE;
}
float CheckDemonJump( gentity_t* self )
{
	vec3_t dist;
	float  d;

	if( self->r.currentOrigin[ 2 ] + self->r.mins[ 2 ] > self->enemy->r.currentOrigin[ 2 ] + self->enemy->r.mins[ 2 ] + 0.75 )
		return FALSE;

	if( self->r.currentOrigin[ 2 ] + self->r.maxs[ 2 ] < self->enemy->r.currentOrigin[ 2 ] + self->enemy->r.mins[ 2 ] + 0.25 )
		return FALSE;

	dist = self->enemy->r.currentOrigin - self->r.currentOrigin;

	d = VectorLength( dist );

	if( d < 100 )
		return FALSE;

	if( d > 200 )
	{
		if( random() < 0.9 )
			return FALSE;
	}

	return TRUE;
}
float DemonCheckAttack( gentity_t* self )
{
	vec3_t vec;

	if( CheckDemonMelee( self ) )
	{
		self->attack_state = AS_MELEE;
		return TRUE;
	}

	if( CheckDemonJump( self ) )
	{
		self->attack_state = AS_MISSILE;
		sound( self, CHAN_VOICE, "demon/djump.wav", 1, ATTN_NORM );
		return TRUE;
	}

	return FALSE;
}
void Demon_Melee( gentity_t* self )
{
	float  ldmg;
	vec3_t delta;

	walkmove( self, self->ideal_yaw, 12 );

	delta = self->enemy->r.currentOrigin - self->r.currentOrigin;

	if( VectorLength( delta ) > 100 )
		return;
	if( !CanDamage( self->enemy, self ) )
		return;

	sound( self, CHAN_WEAPON, "demon/dhit2.wav", 1, ATTN_NORM );
	ldmg = 10 + 5 * random();
	T_Damage( self->enemy, self, self, ldmg );

	makevectors( self->r.currentAngles );
}
void Demon_JumpTouch( gentity_t* self, gentity_t* other, trace_t* trace )
{
	float ldmg;

	if( self->health <= 0 )
		return;

	if( other->takedamage )
	{
		if( VectorLength( self->velocity ) > 400 )
		{
			ldmg = 40 + 10 * random();
			T_Damage( other, self, self, ldmg );
		}
	}

	if( !M_CheckBottom( self ) )
	{
		{
			self->touch     = nullptr;
			self->think     = demon1_jump1;
			self->nextthink = level.time + 0.1;
		}
		return;
	}

	self->touch     = nullptr;
	self->think     = demon1_jump11;
	self->nextthink = level.time + 0.1;
}
